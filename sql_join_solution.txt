1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia 
    SELECT  `students`.`id`, `students`. `name`, `students`.`surname`, `degrees`.`name`
    FROM `students` 
    INNER JOIN `degrees`
    ON `degrees`.id = `students`.`degree_id` 
    WHERE `degrees`.`name` = "Corso di laurea in Economia";

2. Selezionare tutti i Corsi di Laurea del Dipartimento di Neuroscienze
    SELECT `degrees`.`name` as "corso_di_laurea" , `departments`.`name` as "dipartimento"
    FROM `degrees`
    INNER JOIN `departments`
    ON `departments`.`id` = `degrees`.`department_id`
    WHERE `departments`.`name` = "Dipartimento di Neuroscienze";

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44) 
    SELECT `teachers`.`id` as "id_professore", `teachers`.`name`, `teachers`.`surname`, `courses`.`id` as "corso_id" , `courses`.`name` as "nome_corso" 
    FROM `courses`
    INNER JOIN `course_teacher`
    ON `courses`.`id` = `course_teacher`.`course_id`
    INNER JOIN `teachers` 
    ON `teachers`.`id` = `course_teacher`.`teacher_id`
    WHERE 
    `teachers`.`name` = "Fulvio"
    AND 
    `teachers`.`surname` = "Amato";

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome
    SELECT `students`.`id` as "id_studente", `students`.`surname`, `students`.`name`, `degrees`.`id` as "id_corso_laurea", `degrees`.`name` as "nome_corso_laurea", `departments`.`id` as "dipartimento_id", `departments`.`name` as "nome_dipartimento"
    FROM `students`
    INNER JOIN `degrees`
    ON `degrees`.`id` = `students`.`degree_id`
    INNER JOIN `departments`
    ON `departments`.`id` = `degrees`.`department_id` 
    ORDER BY `students`.`surname` ASC, `students`.`name` ASC;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti 
    SELECT *
    FROM `degrees`
    INNER JOIN `courses`
    ON `courses`.`degree_id` = `degrees`.`id`
    INNER JOIN `course_teacher`
    ON `courses`.`id`= `course_teacher`.`course_id`
    INNER JOIN `teachers`
    ON `teachers`.`id` = `course_teacher`.`teacher_id`

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54) 
    SELECT DISTINCT `teachers`.`id`,`teachers`.`name`AS "nome_teacher", `teachers`.`surname` AS "cognome_teacher", `departments`.`name` AS "nome_dipartimento" 
    FROM `teachers`
    INNER JOIN `course_teacher`
    ON `course_teacher`.`teacher_id` = `teachers`.`id`
    INNER JOIN `courses`
    ON `course_teacher`.`course_id` = `courses`.`id`
    INNER JOIN `degrees`
    ON `courses`.`degree_id` = `degrees`.`id`
    INNER JOIN `departments`
    ON `departments`.`id` = `degrees`.`department_id` 
    WHERE `departments`.`name` = "Dipartimento di Matematica"

7. BONUS: Selezionare per ogni studente quanti tentativi d’esame ha sostenuto per superare ciascuno dei suoi esami 
    SELECT `students`.`name`, `students`.`surname`, `courses`.`name` AS "nome_esame",

    --"Uliziammo COUNT per contare il numero di voti in modo da sapere quante volte l'esame è stato fatto"
    COUNT(`exam_student`.`vote`) AS "numero_appelli",

    --"MAX è la funzione che ci permette di avere il voto più alto"
    MAX(`exam_student`.`vote`) AS "voto_migliore"

    FROM `students`
    JOIN `exam_student` 
    ON `students`.`id` = `exam_student`.`student_id`
    JOIN `exams`
    ON `exams`.`id` = `exam_student`.`exam_id` 
    JOIN `courses` 
    ON `courses`.`id`= `exams`.`course_id`
    GROUP BY `students`.`id`, `courses`.`id` 
    -- "Utilizziamo HAVING perchè WHERE non funziona in associata con GROUP BY, e può essere usato anche al posto di WHERE"
    HAVING `voto_migliore` >= 18